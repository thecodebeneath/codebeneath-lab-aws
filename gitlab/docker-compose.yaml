services:
  gitlab:
    container_name: gitlab
    image: '$ECR_REGISTRY/gitlab/gitlab-ce:latest'
    restart: always
    hostname: 'gitlab.codebeneath-labs.org'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # Add any other gitlab.rb configuration here, each on its own line
        external_url 'http://gitlab.codebeneath-labs.org'   # 'https://gitlab' triggers letsencrypt 'true'
        # gitlab_rails['monitoring_whitelist'] = ['127.0.0.0/8', '::1/128'] 
      GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN: "$RUNNER_REG_TOKEN"
    ports:
      - '80:80'
      # - '443:443'
      # - '22:22'
    volumes:
      - '/data/gitlab/config:/etc/gitlab'
      - '/data/gitlab/logs:/var/log/gitlab'
      - '/data/gitlab/data:/var/opt/gitlab'
    shm_size: '256m'
    healthcheck:
      test: curl -f http://localhost/users/sign_in || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 2m

  # This runner image will pull and run specific runner images declared in .gitlab-ci.yml  
  gitlab-runner:
    container_name: gitlab-runner
    depends_on:
      gitlab:
        condition: service_healthy
    image: '$ECR_REGISTRY/gitlab/gitlab-runner:alpine'
    entrypoint: [""]
    command: ["/bin/bash", "-c", "gitlab-runner register \
                                    --non-interactive \
                                    --url 'http://gitlab.codebeneath-labs.org' \
                                    --registration-token '$RUNNER_REG_TOKEN' \
                                    --executor 'docker' \
                                    --docker-image 'python:alpine' \
                                    --docker-network-mode 'host' \
                                    --tag-list 'python,tf' \
              && gitlab-runner run --user=gitlab-runner --working-directory=/etc/gitlab-runner"
    ]
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    network_mode: 'host'
    shm_size: '64m'
